--Examining data from employees and projects tables
SELECT *
FROM employees;
SELECT *
FROM projects;

--Viewing employee names that have not yet chosen a project
SELECT first_name, last_name
FROM employees
WHERE current_project IS NULL;

--View project names that were not chosen by any employees
SELECT project_name
FROM projects
WHERE project_id NOT IN(
  SELECT current_project
  FROM employees
  WHERE current_project IS NOT NULL);

--Find the project chosen by the most employees. Uses an inner join on the projects and employees tables to find projects currently being used
SELECT project_name
FROM projects
INNER JOIN employees
  ON projects.project_id = employees.current_project
WHERE current_project IS NOT NULL
GROUP BY project_name
ORDER BY COUNT(employee_id) DESC
LIMIT 1;

--Shows projects selected by multiple employees
SELECT project_name
FROM projects
INNER JOIN employees
  ON projects.project_id = employees.current_project
WHERE current_project IS NOT NULL
GROUP BY current_project
HAVING COUNT(current_project) > 1;

--Each project needs 2 developers. This query takes total projects multiplied by 2 and subtracts the total developers that currently have a project to find the number of additional developers that are needed.
SELECT (COUNT(*) * 2) - (
  SELECT COUNT(*)
  FROM employees
  WHERE current_project IS NOT NULL
    AND position = 'Developer') AS 'Count'
FROM projects;

Selects the most common personality type
SELECT personality
FROM employees
GROUP BY personality
ORDER BY COUNT(personality) DESC
LIMIT 1;

Selects the projects that are chosen by the most common personality type
SELECT project_name
FROM projects
INNER JOIN employees
    ON projects.project_id = employees.current_project
WHERE personality = (
  SELECT personality
  FROM employees
  GROUP BY personality
  ORDER BY COUNT(personality) DESC
  LIMIT 1);

Returns the info of employees with the most common personality type for each project
SELECT first_name, last_name, personality, project_name
FROM employees
INNER JOIN projects
    ON employees.current_project = projects.project_id
WHERE personality = (
  SELECT personality
  FROM employees
  WHERE current_project IS NOT NULL
  GROUP BY personality
  ORDER BY COUNT(personality) DESC
  LIMIT 1);

--Returns each employee's info along with the number of other employees they are incompatable with based off personality type
SELECT first_name, last_name, project_name, personality,
CASE
   WHEN personality = 'INFP' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('ISFP', 'ESFP', 'ISTP', 'ESTP', 'ISFJ', 'ESFJ', 'ISTJ', 'ESTJ'))
   WHEN personality = 'ENFP' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('ISFP', 'ESFP', 'ISTP', 'ESTP', 'ISFJ', 'ESFJ', 'ISTJ', 'ESTJ'))
   WHEN personality = 'INFJ' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('ISFP', 'ESFP', 'ISTP', 'ESTP', 'ISFJ', 'ESFJ', 'ISTJ', 'ESTJ'))
   WHEN personality = 'ENFJ' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('ISFP', 'ESFP', 'ISTP', 'ESTP', 'ISFJ', 'ESFJ', 'ISTJ', 'ESTJ'))
   WHEN personality = 'ISFP' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('INFP', 'ENFP', 'INFJ'))
   WHEN personality = 'ESFP' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('INFP', 'ENFP', 'INFJ', 'ENFJ'))
   WHEN personality = 'ISTP' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('INFP', 'ENFP', 'INFJ', 'ENFJ'))
   WHEN personality = 'ESTP' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('INFP', 'ENFP', 'INFJ', 'ENFJ'))
   WHEN personality = 'ISFJ' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('INFP', 'ENFP', 'INFJ', 'ENFJ'))
   WHEN personality = 'ESFJ' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('INFP', 'ENFP', 'INFJ', 'ENFJ'))
   WHEN personality = 'ISTJ' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('INFP', 'ENFP', 'INFJ', 'ENFJ'))
   WHEN personality = 'ESTJ' 
   THEN (SELECT COUNT(*)
      FROM employees 
      WHERE personality IN ('INFP', 'ENFP', 'INFJ', 'ENFJ'))
   ELSE 0
END AS 'INCOMPATS'
FROM employees
LEFT JOIN projects on employees.current_project = projects.project_id;
